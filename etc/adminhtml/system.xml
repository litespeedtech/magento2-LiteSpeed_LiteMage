<?xml version="1.0"?>
<!--
/**
 * @package   LiteSpeed_LiteMage
 * @copyright  Copyright (c) LiteSpeed Technologies, Inc. All rights reserved. (https://www.litespeedtech.com)
 * @license     https://opensource.org/licenses/GPL-3.0
 */
-->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
    <system>
        <section id="litemage" translate="label" type="text" sortOrder="905" showInDefault="1" showInWebsite="1" showInStore="1">
            <class>separator-top</class>
            <label>LiteMage Cache</label>
            <tab>advanced</tab>
            <resource>Magento_Config::config_system</resource>
            <group id="general" translate="label" type="text" sortOrder="10" showInDefault="1" showInWebsite="0" showInStore="0">
                <label>General Settings</label>
                <field id="contextbypass" translate="label comment" type="text" sortOrder="10" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Context Vary Bypass</label>
                    <comment>If certain context changes are global and cacheable, you can list their names in a comma-delimited string. LiteMage cache vary will bypass those context changes and will not save a separate cache copy. Example: current_layout, weltpixel_gtm.</comment>
                </field>
                <field id="custom_vary" translate="label comment" type="select" sortOrder="20" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Enable Custom Vary</label>
                    <comment>Allows a new visitor to get a properly cached page when there is a customized vary in place. For example, different currencies based on GeoIP.</comment>
                    <source_model>Litespeed\Litemage\Model\System\Config\Source\CustomVary</source_model>
                </field>
                <field id="ignored_blocks" translate="label comment" type="textarea" sortOrder="30" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Ignored Identity Block Names</label>
                    <comment>By default, an identity block will output cache tags. But there are some usages which defeat the purpose of cache tags, or which cause unnecessary server lookups. These usages include: an identity block that outputs many tags, or a block that appears on every page. To improve performance, you can ignore such blocks. Add the block names to the ignored list in a comma-delimited string.</comment>
                </field>
                <field id="ignored_tags" translate="label comment" type="textarea" sortOrder="40" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Ignored Cached Tags</label>
                    <comment>Cache tags allow intelligent purging, as pages associated with a particular tag may be purged together. 
                        However, performance will degrade if too many tags are assigned to a page. To improve performance, some tags may be ignored. 
                        For example, tags that appear on every page are unnecessary, as a Purge All will have the same effect. 
                        Turn on LiteMage Debug to examine the tags shown on the header, and determine which ones may safely be ignored. 
                        Add these tags to the ignore list in a comma-delimited string.</comment>
                </field>
            </group>
            <group id="purge" translate="label" type="text" sortOrder="20" showInDefault="1" showInWebsite="0" showInStore="0">
                <label>Purge Tuning</label>
                <field id="prod_edit_no_purge_cats" translate="label comment" type="select" sortOrder="10" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Do Not Purge Category Tags when a Product is Updated</label>
                    <comment>By default, when a product is updated, a reindex will purge all parent category pages. In categories and parent categories with many active products, 
                        this can lead to constant purging. Select "Yes" to purge only the product tag. Then, only the product page and related pages containing the product will be purged. 
                        Category and parent category pages that do not contain this product will not be purged. </comment>
                    <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                </field>
                <field id="purge_prod_after_order" translate="label comment" type="select" sortOrder="20" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Purge Products after a Sale</label>
                    <comment>If the product's in-stock quantity is displayed, select "Always purge." 
                        If only the product's stock status is displayed, select "Only purge when out of stock." 
                        If no stock status is shown, then there is no need to purge the product. 
                        Note: when you purge a product tag, all related pages that display the product are also purged.</comment>
                    <source_model>Litespeed\Litemage\Model\System\Config\Source\PurgeAfterOrder</source_model>
                </field>
                <field id="purge_parent_prod_after_order" translate="label comment" type="select" sortOrder="30" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Purge Related Parent Products after a Sale</label>
                    <comment>If a simple product is purged after a sale, and it has a parent product, also purge the parent product.</comment>                    
                    <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                    <depends>
                        <field id="purge_prod_after_order" separator=",">1,2</field>
                    </depends>
                </field>                
                <field id="ignored_purge_tags" translate="label comment" type="textarea" sortOrder="40" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Ignored Purge Tags</label>
                    <comment>Purge tags usually have corresponding cache tags. However some third party modules will send unmatched purge tags that are never used. 
                        To keep LiteSpeed server from having to track such unused tags, you can add them here, in a comma-delimited string.
                        Use a * as a wildcard at the end of a tag to group tags with common starting characters. 
                        Note: Ignored Cache Tags are automatically included in this list. Only add tags that are not already in that list.</comment>
                </field>
            </group>
            <group id="dev" translate="label" type="text" sortOrder="30" showInDefault="1" showInWebsite="0" showInStore="0">
                <label>Developer Settings</label>
                <field id="debug" translate="label comment" type="select" sortOrder="10" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Enable Debug</label>
                    <comment>Prints debug information to var/log/litemage.log. You can temporarily enable debug response headers. Please disable for production usage. </comment>
                    <source_model>Litespeed\Litemage\Model\System\Config\Source\EnableDebug</source_model>
                </field>
                <field id="debug_ips" translate="label comment" type="text" sortOrder="20" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Log Debug Messages Only for Listed IPs</label>
                    <comment>Output debug messages only for specified IPs. (Space or comma separated.) This will reduce logged data and may be easier for troubleshooting.</comment>
                    <depends>
                        <field id="debug" separator=",">1,2</field>
                    </depends>
                </field>
                <field id="debug_trace" translate="label comment" type="select" sortOrder="30" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Log Backtrace for Purge Events</label>
                    <comment>Prints backtrace for LiteMage purge events. This will help troubleshooting unexpected purges.</comment>
                    <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                    <depends>
                        <field id="debug" separator=",">1,2</field>
                    </depends>
                </field>
                <field id="frontend_store_id" translate="label comment" type="text" sortOrder="40" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Frontend Store ID</label>
                    <comment>When cache is flushed from the backend, a purge request is sent to the frontend store URL. In a multi-site and multi-store setup, specify the default frontend store ID here, to ensure that the correct URL is purged. Default value is 1.</comment>
                </field>
                <field id="server_ip" translate="label comment" type="text" sortOrder="50" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>LiteMage Server IP</label>
                    <comment>If LiteMage is behind a CDN or proxy server, use this setting to specify the location of the LiteMage Cache server. This way, a cache flush can access the LiteMage server directly, instead of going through the proxy.</comment>
                </field>
            </group>
        </section>
    </system>
</config>
